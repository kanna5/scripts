#!/bin/bash
set -e -o pipefail

die() {
    [ "$#" -gt 0 ] && echo -e "\033[31m$*\033[0m" >&2
    exit 1
}

findimg() {
    local -a imgs
    readarray -t imgs < <(sudo docker images --format='{{ printf "%s:%s" .Repository .Tag }}')

    declare -a match_prio
    local i
    # Exact matches
    for i in "${imgs[@]}"; do
        case "$i" in
            "$1")     [ -z "${match_prio[1]}" ] && match_prio[1]="$i" ;;
            "$1":*)   [ -z "${match_prio[2]}" ] && match_prio[2]="$i" ;;
            */"$1")   [ -z "${match_prio[3]}" ] && match_prio[3]="$i" ;;
            */"$1":*) [ -z "${match_prio[4]}" ] && match_prio[4]="$i" ;;
        esac
    done

    for i in "${match_prio[@]}"; do
        [ -n "$i" ] && echo "$i" && return 0
    done
}

IMG=archlinux:base-devel
BLACKLIST_DIRS=":/:/boot:/proc:/root:/run:/etc:/usr:/dev:/var:/home:/opt:/srv:/tmp:/mnt:/sys:$(realpath "$HOME"):"

cwd="$(realpath .)"
echo ":$BLACKLIST_DIRS:" | grep -q "$cwd" && die "Refuse to run under protected directory: $cwd"

[ -n "$1" ] && IMG=$(findimg "$1")
[ -z "$IMG" ] && die "image not found: $1"
shift || true

CMD=("$@")
if [ ${#CMD[@]} -le 0 ]; then
    CMD=( /bin/bash )
    case "$IMG" in
        *alpine*)
            CMD=( /bin/sh )
            ;;
    esac
fi

set -x
exec sudo docker run -it --rm -e "TERM=$TERM" -v "$cwd:/cwd" --workdir /cwd "$IMG" "${CMD[@]}"
